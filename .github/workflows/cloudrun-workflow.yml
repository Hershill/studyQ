# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build and Deploy to Cloud Run

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  CLOUDSDK_CORE_PROJECT: ${{ secrets.CLOUDSDK_CORE_PROJECT }} 
  GITHUB_SHA: ${{ github.sha }}
  IMAGE: studyq-backend
  REGISTRY_HOSTNAME: gcr.io
  DEPLOYMENT_NAME: studyq-backend

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      
    # Build the Docker image
    - name: Build
      run: |
        echo $GOOGLE_APPLICATION_CREDENTIALS > key.json
        gcloud auth activate-service-account --key-file=key.json
        gcloud builds submit --tag gcr.io/$GCP_PROJECT/studyq-backend

    # Push the Docker image to Google Container Registry
    - name: Deploy to Cloud Run
      run: |
        gcloud config set run/region us-east1
        gcloud run deploy studyq-backend --image gcr.io/$GCP_PROJECT/studyq-backend --platform managed
